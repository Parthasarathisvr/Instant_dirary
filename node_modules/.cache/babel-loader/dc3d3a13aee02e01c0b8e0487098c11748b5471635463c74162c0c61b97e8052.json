{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\instant_diaries\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/contexts/AuthContext.js\n\nimport React, { createContext, useState, useContext, useEffect } from 'react';\n\n// Create Context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Check if running in client-only mode\nconst clientOnlyMode = process.env.REACT_APP_CLIENT_ONLY_MODE === 'true';\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(clientOnlyMode);\n  useEffect(() => {\n    if (!clientOnlyMode) {\n      // Only check backend if not in client-only mode\n      const checkBackendConnection = async () => {\n        try {\n          const response = await fetch('/api/health-check');\n          if (response.ok) {\n            setIsLoggedIn(false); // Assume not logged in initially\n          }\n        } catch (error) {\n          console.error('Backend not reachable', error);\n        }\n      };\n      checkBackendConnection();\n    }\n  }, []);\n  const login = () => setIsLoggedIn(true);\n  const logout = () => setIsLoggedIn(false);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n// Custom Hook to use Auth Context\n_s(AuthProvider, \"fDZdSI9VLygp3J2+y0GvrdE95dY=\");\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  return useContext(AuthContext);\n}\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","AuthContext","clientOnlyMode","process","env","REACT_APP_CLIENT_ONLY_MODE","AuthProvider","children","_s","isLoggedIn","setIsLoggedIn","checkBackendConnection","response","fetch","ok","error","console","login","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/HP/instant_diaries/src/contexts/AuthContext.js"],"sourcesContent":["// src/contexts/AuthContext.js\r\n\r\nimport React, { createContext, useState, useContext, useEffect } from 'react';\r\n\r\n// Create Context\r\nconst AuthContext = createContext();\r\n\r\n// Check if running in client-only mode\r\nconst clientOnlyMode = process.env.REACT_APP_CLIENT_ONLY_MODE === 'true';\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(clientOnlyMode);\r\n\r\n  useEffect(() => {\r\n    if (!clientOnlyMode) {\r\n      // Only check backend if not in client-only mode\r\n      const checkBackendConnection = async () => {\r\n        try {\r\n          const response = await fetch('/api/health-check');\r\n          if (response.ok) {\r\n            setIsLoggedIn(false); // Assume not logged in initially\r\n          }\r\n        } catch (error) {\r\n          console.error('Backend not reachable', error);\r\n        }\r\n      };\r\n\r\n      checkBackendConnection();\r\n    }\r\n  }, []);\r\n\r\n  const login = () => setIsLoggedIn(true);\r\n  const logout = () => setIsLoggedIn(false);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isLoggedIn, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\n// Custom Hook to use Auth Context\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n"],"mappings":";;;AAAA;;AAEA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;;AAE7E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;;AAEnC;AACA,MAAMO,cAAc,GAAGC,OAAO,CAACC,GAAG,CAACC,0BAA0B,KAAK,MAAM;AAExE,OAAO,SAASC,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAACM,cAAc,CAAC;EAE5DJ,SAAS,CAAC,MAAM;IACd,IAAI,CAACI,cAAc,EAAE;MACnB;MACA,MAAMS,sBAAsB,GAAG,MAAAA,CAAA,KAAY;QACzC,IAAI;UACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mBAAmB,CAAC;UACjD,IAAID,QAAQ,CAACE,EAAE,EAAE;YACfJ,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;UACxB;QACF,CAAC,CAAC,OAAOK,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC/C;MACF,CAAC;MAEDJ,sBAAsB,CAAC,CAAC;IAC1B;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,KAAK,GAAGA,CAAA,KAAMP,aAAa,CAAC,IAAI,CAAC;EACvC,MAAMQ,MAAM,GAAGA,CAAA,KAAMR,aAAa,CAAC,KAAK,CAAC;EAEzC,oBACEV,OAAA,CAACC,WAAW,CAACkB,QAAQ;IAACC,KAAK,EAAE;MAAEX,UAAU;MAAEQ,KAAK;MAAEC;IAAO,CAAE;IAAAX,QAAA,EACxDA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;;AAEA;AAAAhB,EAAA,CA/BgBF,YAAY;AAAAmB,EAAA,GAAZnB,YAAY;AAgC5B,OAAO,SAASoB,OAAOA,CAAA,EAAG;EAAAC,GAAA;EACxB,OAAO9B,UAAU,CAACI,WAAW,CAAC;AAChC;AAAC0B,GAAA,CAFeD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}