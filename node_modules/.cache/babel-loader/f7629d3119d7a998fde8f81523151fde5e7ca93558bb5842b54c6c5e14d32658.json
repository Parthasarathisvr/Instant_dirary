{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\instant_diaries\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\n// src/components/Login.js\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext'; // Import useAuth\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = formData;\n  const navigate = useNavigate();\n  const {\n    login\n  } = useAuth(); // Destructure login function from AuthContext\n\n  // Check if the app is running in client-only mode\n  const clientOnlyMode = process.env.REACT_APP_CLIENT_ONLY_MODE === 'true';\n  const onChange = e => setFormData({\n    ...formData,\n    [e.target.name]: e.target.value\n  });\n  const onSubmit = async e => {\n    e.preventDefault();\n    if (clientOnlyMode) {\n      // In client-only mode, simulate a successful login\n      console.log('Client-only mode: Simulating login...');\n      localStorage.setItem('token', 'dummy-token'); // Store a dummy token in localStorage\n      login(); // Call login from AuthContext\n      navigate('/');\n    } else {\n      // Normal mode: Send a request to the backend server\n      try {\n        const res = await axios.post('http://localhost:5000/api/login', formData);\n        console.log(res.data);\n        localStorage.setItem('token', res.data.token); // Store token in localStorage\n        login(); // Call login from AuthContext\n        navigate('/');\n      } catch (err) {\n        console.error(err.response.data);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"LOG IN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: onChange,\n      placeholder: \"Email\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: onChange,\n      placeholder: \"Password\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"nUyvMgjjBSyQ6wx7hAD493AAqUs=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","useNavigate","useAuth","jsxDEV","_jsxDEV","Login","_s","formData","setFormData","email","password","navigate","login","clientOnlyMode","process","env","REACT_APP_CLIENT_ONLY_MODE","onChange","e","target","name","value","onSubmit","preventDefault","console","log","localStorage","setItem","res","post","data","token","err","error","response","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/HP/instant_diaries/src/components/Login.js"],"sourcesContent":["// src/components/Login.js\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext'; // Import useAuth\r\nimport './Login.css';\r\n\r\nconst Login = () => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  const { email, password } = formData;\r\n  const navigate = useNavigate();\r\n  const { login } = useAuth(); // Destructure login function from AuthContext\r\n\r\n  // Check if the app is running in client-only mode\r\n  const clientOnlyMode = process.env.REACT_APP_CLIENT_ONLY_MODE === 'true';\r\n\r\n  const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    \r\n    if (clientOnlyMode) {\r\n      // In client-only mode, simulate a successful login\r\n      console.log('Client-only mode: Simulating login...');\r\n      localStorage.setItem('token', 'dummy-token'); // Store a dummy token in localStorage\r\n      login(); // Call login from AuthContext\r\n      navigate('/');\r\n    } else {\r\n      // Normal mode: Send a request to the backend server\r\n      try {\r\n        const res = await axios.post('http://localhost:5000/api/login', formData);\r\n        console.log(res.data);\r\n        localStorage.setItem('token', res.data.token); // Store token in localStorage\r\n        login(); // Call login from AuthContext\r\n        navigate('/');\r\n      } catch (err) {\r\n        console.error(err.response.data);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <h2>LOG IN</h2>\r\n      <input\r\n        type=\"email\"\r\n        name=\"email\"\r\n        value={email}\r\n        onChange={onChange}\r\n        placeholder=\"Email\"\r\n        required\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        name=\"password\"\r\n        value={password}\r\n        onChange={onChange}\r\n        placeholder=\"Password\"\r\n        required\r\n      />\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}