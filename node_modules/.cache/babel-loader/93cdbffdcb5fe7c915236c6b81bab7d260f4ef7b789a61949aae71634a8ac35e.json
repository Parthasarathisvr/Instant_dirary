{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\instant_diaries\\\\src\\\\components\\\\AdminPage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react'; // Import useState from 'react'\nimport { useNavigate } from 'react-router-dom'; // Use useNavigate for react-router-dom v6.x and above\nimport jwtDecode from 'jwt-decode'; // Use the correct import from jwt-decode\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPage = () => {\n  _s();\n  const navigate = useNavigate(); // Initialize useNavigate to use for navigation\n  const [users, setUsers] = useState([]); // State to hold user data\n  const [loading, setLoading] = useState(true); // State to handle loading status\n  const [error, setError] = useState(null); // State to handle errors\n\n  // Check user authentication and role\n  useEffect(() => {\n    const token = localStorage.getItem('token'); // Get the token from localStorage\n\n    if (token) {\n      const decodedToken = jwtDecode(token); // Decode the JWT token\n\n      if (decodedToken.user.role !== 'admin') {\n        navigate('/'); // Redirect non-admin users to the home page\n      } else {\n        fetchUsers(); // Fetch users if the authenticated user is an admin\n      }\n    } else {\n      navigate('/login'); // Redirect to login if not authenticated\n    }\n  }, [navigate]); // Dependency array to rerun effect if navigate changes\n\n  // Fetch users from backend API\n  const fetchUsers = async () => {\n    try {\n      const response = await axios.get('/api/users'); // Adjust API endpoint as needed\n      setUsers(response.data); // Set users state with fetched data\n      setLoading(false); // Set loading to false once data is fetched\n    } catch (err) {\n      setError('Failed to fetch users'); // Handle fetch error\n      setLoading(false); // Set loading to false in case of an error\n    }\n  };\n\n  // Handle user deletion\n  const handleDeleteUser = async userId => {\n    try {\n      await axios.delete(`/api/users/${userId}`); // Adjust API endpoint as needed\n      setUsers(users.filter(user => user._id !== userId)); // Remove deleted user from the list\n    } catch (err) {\n      setError('Failed to delete user'); // Handle delete error\n    }\n  };\n\n  // Render loading state\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render error state\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render admin content and user management table\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mb-4\",\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-bordered\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"table-dark\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              onClick: () => handleDeleteUser(user._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, user._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPage, \"+JlOdH56bzjUfJF4HZaTNYeueGI=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["useEffect","useState","useNavigate","jwtDecode","axios","jsxDEV","_jsxDEV","AdminPage","_s","navigate","users","setUsers","loading","setLoading","error","setError","token","localStorage","getItem","decodedToken","user","role","fetchUsers","response","get","data","err","handleDeleteUser","userId","delete","filter","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","name","email","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/instant_diaries/src/components/AdminPage.js"],"sourcesContent":["import { useEffect, useState } from 'react'; // Import useState from 'react'\r\nimport { useNavigate } from 'react-router-dom'; // Use useNavigate for react-router-dom v6.x and above\r\nimport jwtDecode from 'jwt-decode'; // Use the correct import from jwt-decode\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\n\r\nconst AdminPage = () => {\r\n  const navigate = useNavigate(); // Initialize useNavigate to use for navigation\r\n  const [users, setUsers] = useState([]); // State to hold user data\r\n  const [loading, setLoading] = useState(true); // State to handle loading status\r\n  const [error, setError] = useState(null); // State to handle errors\r\n\r\n  // Check user authentication and role\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token'); // Get the token from localStorage\r\n\r\n    if (token) {\r\n      const decodedToken = jwtDecode(token); // Decode the JWT token\r\n\r\n      if (decodedToken.user.role !== 'admin') {\r\n        navigate('/'); // Redirect non-admin users to the home page\r\n      } else {\r\n        fetchUsers(); // Fetch users if the authenticated user is an admin\r\n      }\r\n    } else {\r\n      navigate('/login'); // Redirect to login if not authenticated\r\n    }\r\n  }, [navigate]); // Dependency array to rerun effect if navigate changes\r\n\r\n  // Fetch users from backend API\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const response = await axios.get('/api/users'); // Adjust API endpoint as needed\r\n      setUsers(response.data); // Set users state with fetched data\r\n      setLoading(false); // Set loading to false once data is fetched\r\n    } catch (err) {\r\n      setError('Failed to fetch users'); // Handle fetch error\r\n      setLoading(false); // Set loading to false in case of an error\r\n    }\r\n  };\r\n\r\n  // Handle user deletion\r\n  const handleDeleteUser = async (userId) => {\r\n    try {\r\n      await axios.delete(`/api/users/${userId}`); // Adjust API endpoint as needed\r\n      setUsers(users.filter((user) => user._id !== userId)); // Remove deleted user from the list\r\n    } catch (err) {\r\n      setError('Failed to delete user'); // Handle delete error\r\n    }\r\n  };\r\n\r\n  // Render loading state\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  // Render error state\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  // Render admin content and user management table\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2 className=\"text-center mb-4\">Admin Dashboard</h2>\r\n      <table className=\"table table-bordered\">\r\n        <thead className=\"table-dark\">\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Role</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.map((user) => (\r\n            <tr key={user._id}>\r\n              <td>{user.name}</td>\r\n              <td>{user.email}</td>\r\n              <td>{user.role}</td>\r\n              <td>\r\n                <button\r\n                  className=\"btn btn-danger\"\r\n                  onClick={() => handleDeleteUser(user._id)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}