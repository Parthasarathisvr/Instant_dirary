{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\instant_diaries\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [serverAvailable, setServerAvailable] = useState(true);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // Check server availability\n  useEffect(() => {\n    const checkServerAvailability = async () => {\n      try {\n        const response = await fetch('/api/check'); // Health check endpoint\n        if (response.ok) {\n          setServerAvailable(true);\n        } else {\n          setServerAvailable(false);\n        }\n      } catch {\n        setServerAvailable(false);\n      }\n    };\n    checkServerAvailability();\n    const interval = setInterval(checkServerAvailability, 5000); // Check every 5 seconds\n    return () => clearInterval(interval); // Cleanup interval on unmount\n  }, []);\n\n  // Handle login\n  const login = async () => {\n    if (serverAvailable) {\n      // Perform login\n      // setIsLoggedIn(true);\n    } else {\n      console.log(\"Server is unavailable\");\n    }\n  };\n\n  // Handle logout\n  const logout = async () => {\n    if (serverAvailable) {\n      // Perform logout\n      // setIsLoggedIn(false);\n    } else {\n      console.log(\"Server is unavailable\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: serverAvailable ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Website Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Website is partially available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WI3r+rsBjb5ELWxPn+Y3mbaxum4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","serverAvailable","setServerAvailable","isLoggedIn","setIsLoggedIn","checkServerAvailability","response","fetch","ok","interval","setInterval","clearInterval","login","console","log","logout","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/instant_diaries/src/contexts/AuthContext.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction App() {\r\n  const [serverAvailable, setServerAvailable] = useState(true);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  // Check server availability\r\n  useEffect(() => {\r\n    const checkServerAvailability = async () => {\r\n      try {\r\n        const response = await fetch('/api/check'); // Health check endpoint\r\n        if (response.ok) {\r\n          setServerAvailable(true);\r\n        } else {\r\n          setServerAvailable(false);\r\n        }\r\n      } catch {\r\n        setServerAvailable(false);\r\n      }\r\n    };\r\n\r\n    checkServerAvailability();\r\n    const interval = setInterval(checkServerAvailability, 5000); // Check every 5 seconds\r\n    return () => clearInterval(interval); // Cleanup interval on unmount\r\n  }, []);\r\n\r\n  // Handle login\r\n  const login = async () => {\r\n    if (serverAvailable) {\r\n      // Perform login\r\n      // setIsLoggedIn(true);\r\n    } else {\r\n      console.log(\"Server is unavailable\");\r\n    }\r\n  };\r\n\r\n  // Handle logout\r\n  const logout = async () => {\r\n    if (serverAvailable) {\r\n      // Perform logout\r\n      // setIsLoggedIn(false);\r\n    } else {\r\n      console.log(\"Server is unavailable\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Render components based on server availability and login state */}\r\n      {serverAvailable ? (\r\n        <div>\r\n          <h1>Website Content</h1>\r\n          {/* Login/Logout Buttons */}\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <h1>Website is partially available</h1>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMS,uBAAuB,GAAG,MAAAA,CAAA,KAAY;MAC1C,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC;QAC5C,IAAID,QAAQ,CAACE,EAAE,EAAE;UACfN,kBAAkB,CAAC,IAAI,CAAC;QAC1B,CAAC,MAAM;UACLA,kBAAkB,CAAC,KAAK,CAAC;QAC3B;MACF,CAAC,CAAC,MAAM;QACNA,kBAAkB,CAAC,KAAK,CAAC;MAC3B;IACF,CAAC;IAEDG,uBAAuB,CAAC,CAAC;IACzB,MAAMI,QAAQ,GAAGC,WAAW,CAACL,uBAAuB,EAAE,IAAI,CAAC,CAAC,CAAC;IAC7D,OAAO,MAAMM,aAAa,CAACF,QAAQ,CAAC,CAAC,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMG,KAAK,GAAG,MAAAA,CAAA,KAAY;IACxB,IAAIX,eAAe,EAAE;MACnB;MACA;IAAA,CACD,MAAM;MACLY,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACtC;EACF,CAAC;;EAED;EACA,MAAMC,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAId,eAAe,EAAE;MACnB;MACA;IAAA,CACD,MAAM;MACLY,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACtC;EACF,CAAC;EAED,oBACEhB,OAAA;IAAAkB,QAAA,EAEGf,eAAe,gBACdH,OAAA;MAAAkB,QAAA,eACElB,OAAA;QAAAkB,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAErB,CAAC,gBAENtB,OAAA;MAAAkB,QAAA,eACElB,OAAA;QAAAkB,QAAA,EAAI;MAA8B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACpB,EAAA,CA3DQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AA6DZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}